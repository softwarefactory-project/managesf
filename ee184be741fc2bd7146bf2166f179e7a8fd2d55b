{
  "comments": [
    {
      "key": {
        "uuid": "5aa745d1_11bc5c6b",
        "filename": "managesf/api/v2/resources/__init__.py",
        "patchSetId": 8
      },
      "lineNbr": 63,
      "author": {
        "id": 7
      },
      "writtenOn": "2017-07-27T08:35:44Z",
      "side": 1,
      "message": "Can\u0027t we reuse the class defined in the yamlbkd directly?",
      "revId": "ee184be741fc2bd7146bf2166f179e7a8fd2d55b",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aa745d1_712280bb",
        "filename": "managesf/api/v2/resources/__init__.py",
        "patchSetId": 8
      },
      "lineNbr": 63,
      "author": {
        "id": 68
      },
      "writtenOn": "2017-07-27T09:27:31Z",
      "side": 1,
      "message": "This class is different, used for REST serialization",
      "parentUuid": "5aa745d1_11bc5c6b",
      "revId": "ee184be741fc2bd7146bf2166f179e7a8fd2d55b",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aa745d1_cc08972b",
        "filename": "managesf/api/v2/resources/__init__.py",
        "patchSetId": 8
      },
      "lineNbr": 63,
      "author": {
        "id": 7
      },
      "writtenOn": "2017-07-27T09:46:18Z",
      "side": 1,
      "message": "That sounds like unnecessary code/doc duplication, can\u0027t the class in yamlbkd be used for REST serialization?",
      "parentUuid": "5aa745d1_712280bb",
      "revId": "ee184be741fc2bd7146bf2166f179e7a8fd2d55b",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aa745d1_2c5ffb0f",
        "filename": "managesf/api/v2/resources/__init__.py",
        "patchSetId": 8
      },
      "lineNbr": 63,
      "author": {
        "id": 6
      },
      "writtenOn": "2017-07-27T11:00:52Z",
      "side": 1,
      "message": "Well that\u0027s true every resources get a MODEL data structure (yamlbkd/resources/project.py). You\u0027ll find attribute and doc str. And you get the advantage of staying up to date when a backend resource evolve.",
      "parentUuid": "5aa745d1_cc08972b",
      "revId": "ee184be741fc2bd7146bf2166f179e7a8fd2d55b",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aa745d1_b1ba486d",
        "filename": "managesf/api/v2/resources/services/manageSF.py",
        "patchSetId": 8
      },
      "lineNbr": 35,
      "author": {
        "id": 7
      },
      "writtenOn": "2017-07-27T08:35:44Z",
      "side": 1,
      "message": "Why adding a cache when the yamlbkd already has a cache?",
      "revId": "ee184be741fc2bd7146bf2166f179e7a8fd2d55b",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aa745d1_b1480889",
        "filename": "managesf/api/v2/resources/services/manageSF.py",
        "patchSetId": 8
      },
      "lineNbr": 35,
      "author": {
        "id": 68
      },
      "writtenOn": "2017-07-27T09:27:31Z",
      "side": 1,
      "message": "It\u0027s more of a transformed data structure to make querying easier. It has a cache mechanism distinct from the yamlbkd cache so that it\u0027s not rebuilt every time",
      "parentUuid": "5aa745d1_b1ba486d",
      "revId": "ee184be741fc2bd7146bf2166f179e7a8fd2d55b",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aa745d1_ac0d4b39",
        "filename": "managesf/api/v2/resources/services/manageSF.py",
        "patchSetId": 8
      },
      "lineNbr": 35,
      "author": {
        "id": 7
      },
      "writtenOn": "2017-07-27T09:46:18Z",
      "side": 1,
      "message": "Then why not improving the yamlbkd cache directly? Since this is redefining resources structure, it will make code maintaince harder otherwise... I really think the table creation and variable type should be part of the yamlbkd.",
      "parentUuid": "5aa745d1_b1480889",
      "revId": "ee184be741fc2bd7146bf2166f179e7a8fd2d55b",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aa745d1_cca4170a",
        "filename": "managesf/api/v2/resources/services/manageSF.py",
        "patchSetId": 8
      },
      "lineNbr": 35,
      "author": {
        "id": 6
      },
      "writtenOn": "2017-07-27T11:00:52Z",
      "side": 1,
      "message": "I agree that have all key name generically fetched form resources/MODEL will ease code maintenance. So better to handle that more generic if possible. After it can also make sense that this relay db is maintained at the resources backend level but I won\u0027t block on that. Finally about the yamlbkd cache that\u0027s not the same usage indeed the cache only store merged data to avoid reading/(+ lazy validating) all yaml files (rdo -\u003e a lot of file) if the HEAD hash is the same. yamlbkd/yamlbackend.py is agnostic about data format.",
      "parentUuid": "5aa745d1_ac0d4b39",
      "revId": "ee184be741fc2bd7146bf2166f179e7a8fd2d55b",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aa745d1_d1b5d47e",
        "filename": "managesf/controllers/api/v2/resources.py",
        "patchSetId": 8
      },
      "lineNbr": 29,
      "author": {
        "id": 7
      },
      "writtenOn": "2017-07-27T08:35:44Z",
      "side": 1,
      "message": "Any chance to refactor that code duplication into a parent method?",
      "revId": "ee184be741fc2bd7146bf2166f179e7a8fd2d55b",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aa745d1_5158a456",
        "filename": "managesf/controllers/api/v2/resources.py",
        "patchSetId": 8
      },
      "lineNbr": 29,
      "author": {
        "id": 68
      },
      "writtenOn": "2017-07-27T09:27:31Z",
      "side": 1,
      "message": "REST controllers are indeed very similar, I\u0027ll do that in an upcoming patch",
      "parentUuid": "5aa745d1_d1b5d47e",
      "revId": "ee184be741fc2bd7146bf2166f179e7a8fd2d55b",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aa745d1_f1c0d0e2",
        "filename": "managesf/tests/fixtures/sf_resources.py",
        "patchSetId": 8
      },
      "lineNbr": 24,
      "author": {
        "id": 7
      },
      "writtenOn": "2017-07-27T08:35:44Z",
      "side": 1,
      "message": "why not storing the pretty printed version?",
      "revId": "ee184be741fc2bd7146bf2166f179e7a8fd2d55b",
      "serverId": "6c1dc8ef-8b94-40e4-bd83-c2359d45ecc0",
      "unresolved": false
    }
  ]
}